scp_procedure -> test_prog2 (*
	-> rrel_vars: { _parameter; _elem; _arc1 };;
	-> rrel_consts: .test_prog2_consts;;
	-> rrel_params: .test_prog2_params (*
		-> rrel_1: rrel_in: _parameter;;
	*);;
	-> rrel_operators: .test_prog2_operators (*

		-> rrel_init:
		.test_prog2_operator1 (*
			<- searchElStr3;;
			-> rrel_1: rrel_fixed: _parameter;;
			-> rrel_2: rrel_assign: rrel_const: rrel_pos: _arc1;;
			-> rrel_3: rrel_assign: rrel_node: _elem;;
			-> rrel_then: .test_prog2_operator2;;
			-> rrel_else: .test_prog2_operator3;;
		*);;
		
		-> .test_prog2_operator2 (*
			<- printNl;;
			-> rrel_1: rrel_fixed: [YES] (* <- .test_prog2_consts;; *);;
			-> rrel_goto: .test_prog2_operator4;;
		*);;

		-> .test_prog2_operator3 (*
			<- printNl;;
			-> rrel_1: rrel_fixed: [NO] (* <- .test_prog2_consts;; *);;
			-> rrel_goto: .test_prog2_operator4;;
		*);;

		-> .test_prog2_operator4 (*
			<- return;;
		*);;
	*);;
*);;

node1 -> node2;;
node2 -> node3;;

quest2 -> rrel_1: test_prog2;;
quest2 -> rrel_2: .quest2_params (* 
	-> rrel_1: node1;; 
	*);;

