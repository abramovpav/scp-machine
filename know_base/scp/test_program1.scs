scp_procedure -> test_prog1 (*
	-> rrel_vars: { ._start_node; ._first_relation; ._arc1; ._arc2; ._node1 };;
	-> rrel_consts: { nrel_value };;
	-> rrel_params: .test_prog1_params (*
		-> rrel_1: rrel_in: ._start_node;;
		-> rrel_2: rrel_in: ._first_relation;;
		-> rrel_3: rrel_in: rrel_out: ._node1;;
	*);;
	-> rrel_operators: .test_prog1_operators (*

		-> rrel_init:
		.test_prog1_operator1 (*
			<- searchElStr5;;
			-> rrel_1: rrel_fixed: ._start_node;;
			-> rrel_2: rrel_assign: rrel_const: rrel_pos: ._arc1;;
			-> rrel_3: rrel_assign: rrel_node: ._node1;;
			-> rrel_4: rrel_assign: rrel_const: rrel_pos: ._arc2;;
			-> rrel_5: rrel_fixed: ._first_relation;;
		*);;
		
		-> .test_prog1_operator2 (*
			<- searchElStr5;;
			-> rrel_1: rrel_fixed: ._node1;;
			-> rrel_2: rrel_assign: rrel_const: rrel_pos: ._arc1;;
			-> rrel_3: rrel_assign: rrel_node: ._node1;;
			-> rrel_4: rrel_assign: rrel_const: rrel_pos: ._arc2;;
			-> rrel_5: rrel_fixed: nrel_value;;
		*);;

		-> .test_prog1_operator3 (*
			<- printNl;;
			-> rrel_1: rrel_fixed: ._node1;;
		*);;

		-> .test_prog1_operator3 (*
			<- return;;
		*);;
	*);;
*);;

triangle -> triangle_A_B_C;;
triangle_A_B_C => nrel_square: .triangle_A_B_C_square (* => nrel_value: [120];; *);;

quest1 -> rrel_1: test_prog1;;
quest1 -> rrel_2: .quest1_params (* 
	-> (._start_node => triangle_A_B_C);; 
	-> (._first_relation => nrel_square);;
	-> (._node1 => nrel_perimeter);;
	*);;

